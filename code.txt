import network
import time
from machine import Pin
from umqtt.robust2 import MQTTClient

# wifi
WIFI_NAAM = "bokkie"
WIFI_WACHTWOORD = "papabokkie"

#mqtt
server = b'3a4dfe20cdd343c38a16f0eb6aaa4818.s2.eu.hivemq.cloud'
client_id = 'picow'
topic_pub = b'/picow/test'
topic_msg = b'test van pico w'
user=b"testw"
password=b"2023_A103_S1#a"

def turnOnboardLedOn():
    led = Pin("LED", machine.Pin.OUT)
    led.on()

def turnOnBoardLedOff():
    led = Pin("LED", machine.Pin.OUT)
    led.off()

def wifi_connect():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect(WIFI_NAAM,WIFI_WACHTWOORD)
    while wlan.isconnected() == False:
        print('Waiting for wifi connection...')
        time.sleep(1)
    turnOnboardLedOn()
    print('Connected to "%s" wifi'%(WIFI_NAAM))
    return

def mqtt_connect():
    client = MQTTClient(
        client_id=client_id,
        server=server,
        port=0,
        user=user,
        password=password,
        keepalive=3600,
        ssl=True,
        ssl_params={'server_hostname': server}
    )
    client.connect()
    print("Connected To MQTT Broker")
    return client
    
def publish(topic, value, client):
    '''Sends data to the broker'''
    try:
        client.publish(topic, value)
        print("Publish Done")    
    except Exception as e:
        print(f'Failed to publish message: {e}')
        
class led():
    def onboardOn():
        led = Pin("LED", machine.Pin.OUT)
        led.on()
    def onboardOff():
        led = Pin("LED", machine.Pin.OUT)
        led.off()
    def statusGreen()
        
        
def main():
    wifi_connect()
    
    
    #mqtt = mqtt_connect()
    #while(True):
    #    turnOnBoardLedOff()
    #    publish(topic_pub, topic_msg, mqtt)
    #    time.sleep(1)
    #    turnOnboardLedOn()

if __name__ == "__main__":
    main()
